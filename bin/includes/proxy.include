#!/usr/bin/env bash

# proxy.include is an include file for bash scripts.
# It provides proxy related functions.
#
# It is part of the bash-dwarfs project,
# see also https://github.com/jonelo/bash-dwarfs
#
# To use it for your project, store this file where your bash script
# is stored and source this file by calling
#
# SCRIPT_DIR="$(cd "$(dirname "$0")" && pwd)"
# . "${SCRIPT_DIR}/proxy.include"
#
#
# Copyright 2017 Johann N. Loefflmann
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.


# The following function is useful for Java applications that could benefit
# from proxy settings, but running on platforms that don't support gathering
# the system system proxy settings such as Java 8 on macOS and Java 8/9/10 on
# non-Gnome systems.
#
# If the environment variable called http_proxy or HTTP_PROXY is set,
# the Java properties are being generated accordingly for
# http.proxyHost, http.proxyPort, https.proxyHost and https.proxyPort
# and if the environment variable called no_proxy or NO_PROXY is set,
# the Java property is being generated accordingly for http.nonProxyHosts
# as well (that is also responsible for https)
# if no appropriate environment proxy variables have been set, the Java
# property called java.net.useSystemProxies is set to true.
#
# See also
# http://docs.oracle.com/javase/8/docs/api/java/net/doc-files/net-properties.html
# http://docs.oracle.com/javase/9/docs/api/java/net/doc-files/net-properties.html
# https://docs.oracle.com/javase/10/docs/api/java/net/doc-files/net-properties.html
#
# Example usage:
# SCRIPT_DIR="$(cd "$(dirname "$0")" && pwd)"
# . "${SCRIPT_DIR}/proxy.include"
# exec java $(proxyPropsForJava) -jar yourjar.jar
#
function proxyPropsForJava() {

    # Is either http_proxy or HTTP_PROXY set?
    if ! [ -z $http_proxy ]; then
        local MY_PROXY=$http_proxy
    elif ! [ -z $HTTP_PROXY ]; then
        local MY_PROXY=$HTTP_PROXY
    fi

    if [ -z $MY_PROXY ]; then
        # http_proxy and HTTP_PROXY are not set, let's try system set proxies
        local PROXY_FLAGS="-Djava.net.useSystemProxies=true"
    else
        # generate Java properties based on http_proxy resp HTTP_PROXY
        if ! [ -z $MY_PROXY ] && [[ $MY_PROXY =~ ^([^:]+):([0-9]+)$ ]]; then
            local server=${BASH_REMATCH[1]}
            local port=${BASH_REMATCH[2]}
            PROXY_FLAGS="-Dhttp.proxyHost=$server -Dhttp.proxyPort=$port"
        fi

        # copy http props to https props
        PROXY_FLAGS=${PROXY_FLAGS}" "${PROXY_FLAGS//-Dhttp./-Dhttps.}

        # The HTTPS protocol handler will use the same nonProxyHosts property as the HTTP protocol
        if ! [ -z $no_proxy ]; then
            local MY_NO_PROXY=$no_proxy
        elif ! [ -z $NO_PROXY]; then
            local MY_NO_PROXY=$NO_PROXY
        fi

        if ! [ -z $MY_NO_PROXY ]; then
            MY_NO_PROXY=${MY_NO_PROXY//,/|}
            PROXY_FLAGS=${PROXY_FLAGS}$(printf " -Dhttp.nonProxyHosts=\"%s\"\n" $MY_NO_PROXY )
        fi
    fi
    printf "%s" "$PROXY_FLAGS"
}
