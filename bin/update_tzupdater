#!/usr/bin/env bash
#
# update_tzupdater 1.0.0
#
# This script downloads the latest tzupdater from oracle.com and
# updates the tzupdater.jar in the directory where this script is stored.
# The script accepts the license at
# http://www.oracle.com/technetwork/java/javasebusiness/downloads/tzupdater-lic-354297.txt
# for you. Please don't run the script if you don't agree with it.
#
# Copyright 2017 Johann N. Loefflmann
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Explicitly set the PATH
PATH="/sbin:/usr/sbin:/bin:/usr/bin"
SCRIPT_DIR="$(cd "$(dirname "$0")" && pwd)"

CONF_DIR="${SCRIPT_DIR}/.tzupdater"
TZUPDATER_PAGE=http://www.oracle.com/technetwork/java/javase/downloads/tzupdater-download-513681.html
DOWNLOAD_PREFIX=http://download.oracle.com/otn-pub/java/tzupdater/
VERSION_FILE="${CONF_DIR}/tzupdater.version"
TZUPDATER_JAR="${SCRIPT_DIR}/tzupdater.jar"
TZUPDATER_ZIP="${CONF_DIR}/tzupdater.zip"

# creating the configuration directory
if [ ! -d "${CONF_DIR}" ]; then
    printf "Making directory: %s\n" "${CONF_DIR}"
    mkdir -p "${CONF_DIR}"
fi

# Download the webpage and store it in the $HTML variable
echo "Checking for new tzudpater ..."
echo "Downloading $TZUPDATER_PAGE ..."
TEMP_FILE=/tmp/tzupdater.html.$$
if [ -f "$TEMP_FILE" ]; then
    rm "$TEMP_FILE"
fi
curl -o "$TEMP_FILE" "$TZUPDATER_PAGE"
if [ -f "$TEMP_FILE" ]; then
    HTML=$(<"$TEMP_FILE")
    rm "$TEMP_FILE"
else
    printf "FATAL: Download of webpage %s failed. Please check your internet connection.\n" "$TZUPDATER_PAGE"
    exit 1
fi

# Parse for the actual download address
if [[ "$HTML" =~ $DOWNLOAD_PREFIX([^\"]+)\" ]]; then
    DOWNLOAD_ADDRESS="${DOWNLOAD_PREFIX}${BASH_REMATCH[1]}"
    # e.g. http://download.oracle.com/otn-pub/java/tzupdater/2.1.0/tzupdater-2_1_0.zip
    printf "Found %s in %s\n" ${DOWNLOAD_ADDRESS} ${TZUPDATER_PAGE}
else
    printf "FATAL: Actual download address was not found in content of %s\n" $TZUPDATER_PAGE
    exit 1
fi

# Do we need to download the file actually?
# Let's check what we have downloaded in the past
if [ ! -f "${TZUPDATER_JAR}" ] || [ ! -f "${VERSION_FILE}" ]; then
   printf "%s\n" "none" > "${VERSION_FILE}"
fi
WEHAVE=$(<"${VERSION_FILE}")

if [ "$DOWNLOAD_ADDRESS" != "$WEHAVE" ]; then
   printf "Downloading %s ...\n" $DOWNLOAD_ADDRESS
   if [ -f "${TZUPDATER_ZIP}" ]; then
       rm "${TZUPDATER_ZIP}"
   fi
   curl -o "${TZUPDATER_ZIP}" -j -k -L -H "Cookie: oraclelicense=accept-securebackup-cookie" $DOWNLOAD_ADDRESS
   if [ -f "${TZUPDATER_ZIP}" ]; then
       printf "%s\n" "${DOWNLOAD_ADDRESS}" > "${VERSION_FILE}"
   
       echo "Extracting the zip file ..."
       NEW_TZUPDATER_JAR=$(unzip -l "${TZUPDATER_ZIP}" | grep tzupdater.jar)
       NEW_TZUPDATER_JAR=${NEW_TZUPDATER_JAR##* }
       unzip -d ${CONF_DIR} -o ${TZUPDATER_ZIP}
   
       echo "Updating tzupdater.jar ..."
       rm ${TZUPDATER_JAR} 2>/dev/null
       
       # relative symlink preferred
       BACKUP=$(pwd)
       cd "${CONF_DIR}"
       ln -s .tzupdater/${NEW_TZUPDATER_JAR} ${TZUPDATER_JAR}
       cd "${BACKUP}"
   
       echo "Clean up ..."
       rm "${TZUPDATER_ZIP}"
   else
       printf "FATAL: Download failed.\n"
       exit 1
   fi
else
   printf "Skipping download, because we have %s already.\n" $DOWNLOAD_ADDRESS
fi
